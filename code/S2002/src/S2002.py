#!/usr/bin/env python 3
# -*- coding: utf-8 -*-
from os.path import join, abspath

# Подсчитаем количество слов и букв в тексте который состоит из списка строк.
# Для этого сделаем функцию.
def word_calculate(spis_line):
    #задаем начальное количество
    n_letters, n_words = 0, 0 # продвинутый прием!!!!. принято в пайтоне
    #n_words = 0
    #n_letters = 0
    # сделаем цикл по строкам в списке
    for lin in spis_line:
        # Удаляем начальные и конечные пробелы
        lin = lin.strip()
        # Увеличиваем количество символов
        n_letters += len(lin)
        # Увеличиваем количество слов
        n_words += len(lin.split())
    # возвращаем кортеж(всегда так делается)
    return n_words, n_letters
    

data_path = join('..', 'Data', 'elochka.txt')
data_path = abspath(data_path)
print(data_path)

# Пустой словарь для слов
bslov = {}

# Пустой словарь для букв
dsimbols = dict()

# Открываем файл на чтение до конца блока with
# При выходе из блока файл будет автоматически закрыт
# и становится недоступным.
with open(data_path, mode='rt', encoding='UTF-8') as src:
    # Считываю файл по строчкам через цикл в пременную line.
    for line in src:
        # переводим в нижний регистр и удаляем внешние пробелы
        line = line.strip().lower()
        # анализируем буквы
        for letter in line:
            if letter in dsimbols:
                # если буква уже есть в словаре прибавляем 
                # к старому значению 1
                dsimbols[letter] += 1
            else:
                # если буквы нет то записываем 
                # значение 1(первая буква попалась)
                dsimbols[letter] = 1
        # Анализируем слова(снова разбиваем на слова с помощью пробела)
        for word in line.split():
            #=======================================================
            # отбираем только те слова которые больше двух символов
            #=======================================================
            if len(word) > 2:
                # добавляем их в словарь, увеличивая старое значение на 1
                # Метод get возвращает 0 (мы его указали) если слова нет !!!
                bslov[word] = bslov.get(word, 0) + 1
# В переменной song формируем текст песни в виде строк(для дальнейшего исп. для сортировки словарей)
with open(data_path, mode='rt', encoding='UTF-8') as src:
    song = list(src)
# Создаем список из кортежей(буква, количество)
list_simbols1 = list(dsimbols.items()) 
# Сортируем этот список по кортежу(реально по первому элементу кортэжа)
#list_simbols1 = list_simbols1.sort()# возвращает None потому что отсортировал на месте и при присвоении 
                                     # к list_simbols1 вернул None. Поэтому нужно делать без присвоения. Или sorted()
list_simbols1.sort()    

#Используя генератор списков, создаем список из кортежей(количество, буква)
list_simbols2 = [(n, l) for l, n in dsimbols.items()]
# Сортируем список по первому элементу кортежа (колличество)
list_simbols2.sort(reverse=True)

# Теперь печатае буквы текста в алфавитном порядке
print('печатаем буквы текста в алфавитном порядке')
print('*'*50)
# распаковка кортежа
for b, n in list_simbols1:
    print(f'Буква {b} встресается в тексте {n:3} раз.')
    
print('\n\nБуквы в тексте по частоте появления:')
print('*'*50)
# Разбор кортежа 2. Символы n и b в обратном порядке.
for n, b in list_simbols2:
    print(f'Буква {b} встресается в тексте {n:3} раз.')  
    
# Производим анализ слов в тексте
# сформируем через списк кортеж значений (количество, слово)
spis = [(n, l) for l, n in bslov.items()]
spis.sort()
print('\n\nпечатаем слова текста в алфавитном порядке')
print('*'*50)
# распаковка кортежа
for b, n in spis:
    print(f'Слово "{n}" встречается в тексте {b:7} раз.')

print('\n\nпечатаем слова текста по частоте появления')
print('*'*50)
# распаковка кортежа Символы n и b в обратном порядке.
for n, b in spis:
    print(f'Слово "{b}" встречается в тексте {n:7} раз.')
print('*'*50)    
# Подсчитаем количество слов в тексте
# для этого сделаем функцию и запишем ее в начале.
# Используем нашу функцию для подсчета количества слов, букв
nw, nl = word_calculate(song)
print(f'\nКоличество слов в тексте {nw:3}.')
print(f'Количество букв в тексте {nl}.')
    

print('END')
